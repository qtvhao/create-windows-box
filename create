#!/bin/bash


grep avx2 /proc/cpuinfo || {
    echo "CPU does not support AVX"
    exit 0
}
set -xeo pipefail

build_phase3() {
  echo "phase3"
}

WINDOWS_ISO_PATH="/root/windows.iso"
install_windows() {
    echo "Creating empty box for Windows"
    VBoxManage createvm --name "empty-box" --ostype "Windows10_64" --register
    VBoxManage modifyvm "empty-box" --memory 8192 --cpus 2
    VBoxManage modifyvm "empty-box" --nic1 none
    # 
    VBoxManage storagectl "empty-box" --name "IDE Controller" --add ide
    VBoxManage storageattach "empty-box" --storagectl "IDE Controller" --port 0 --device 0 --type dvddrive --medium $WINDOWS_ISO_PATH

    VBoxManage storagectl "empty-box" --name "SATA Controller" --remove || true
    VBoxManage closemedium disk "/root/empty-box.vdi" --delete || true
    VBoxManage createhd --filename "/root/empty-box.vdi" --size 50000 --format VDI # 50GB
    VBoxManage storagectl "empty-box" --name "SATA Controller" --add sata --controller IntelAHCI
    VBoxManage storageattach "empty-box" --storagectl "SATA Controller" --port 0 --device 0 --type hdd --medium "/root/empty-box.vdi"

    VBoxManage modifyvm "empty-box" --boot1 dvd --boot2 disk --boot3 none --boot4 none

    VBoxManage startvm "empty-box" --type headless

    NETWORK_INTERFACE=$(ip route | grep default | awk '{print $5}')
    while true; do
        hostnameI=`hostname -I | tr ' ' '\n' | grep "192" | head -n 1`
        HOST_PASSWORD=`cat /root/rdp_password.txt`
        echo "Connect to $hostnameI:3389 with username: root, password: $HOST_PASSWORD and finish the Windows 10 installation. You must turn off the Windows 10 VM after the installation is complete"
        sleep 8
        VBoxManage modifyvm "empty-box" --nic1 bridged --bridgeadapter1 "$NETWORK_INTERFACE" && break || true
    done
    echo "empty-box is powered off"
}

build_phases=(
  "empty-box install_windows windows-installed"
)
for phase in "${build_phases[@]}"; do
    box1=`echo $phase | awk '{print $1}'`
    box2=`echo $phase | awk '{print $3}'`
    function_to_call=`echo $phase | awk '{print $2}'`
    # check if $box2 exists
    COUNT_BOX2=`VBoxManage list vms | grep "$box2" | wc -l` || true
    if [ "x$COUNT_BOX2" != "x0" ]; then
        echo "$box2 exists, skip"
        continue
    fi
    # stop and delete $box1
    COUNT_BOX1=`VBoxManage list vms | grep "$box1" | wc -l` || true
    if [ "x$COUNT_BOX1" != "x0" ]; then
        VBoxManage controlvm "$box1" poweroff || true
        VBoxManage unregistervm "$box1" --delete || true
    fi
    
    echo "box1: $box1, box2: $box2, function_to_call: $function_to_call"

    $function_to_call

    VBoxManage controlvm "$box1" poweroff || true
    VBoxManage clonevm "$box1" --name "$box2" --register
done
